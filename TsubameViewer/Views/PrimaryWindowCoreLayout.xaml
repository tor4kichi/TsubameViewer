<Page
    x:Class="TsubameViewer.Views.PrimaryWindowCoreLayout"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TsubameViewer.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:ts="using:TsubameViewer.Views.TemplateSelector"
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:uwpExtensions="using:Microsoft.Toolkit.Uwp.UI"
  xmlns:wst="using:WindowsStateTriggers" 
  xmlns:myConv="using:TsubameViewer.Views.Converters" 
  xmlns:mySS="using:TsubameViewer.Views.StyleSelector" 
  xmlns:viewModel="using:TsubameViewer.ViewModels"
  xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
  xmlns:i18Ext="using:I18NPortable.Xaml.Extensions"
  xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
  xmlns:uiNavigation="using:TsubameViewer.Views.UINavigation"
  xmlns:fi="using:Fluent.Icons"
  mc:Ignorable="d"
  Background="{ThemeResource ApplicationContentBackgroundBrush}"
  >
  <Page.Resources>

    <ResourceDictionary>
      
      <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Light">
          <SolidColorBrush x:Key="NavigationViewTopPaneBackground" Color="{ThemeResource SystemChromeMediumColor}" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">
          <SolidColorBrush x:Key="NavigationViewTopPaneBackground" Color="{ThemeResource SystemChromeMediumColor}" />
        </ResourceDictionary>
      </ResourceDictionary.ThemeDictionaries>

      <myConv:AutoSuggestBoxQuerySubmittedEventArgsConverter x:Key="AutoSuggestBoxQuerySubmittedEventArgsConverter" />

      <CollectionViewSource x:Key="AutoSuggestBoxItems"
                          Source="{x:Bind _vm.AutoSuggestBoxItems}"
                          IsSourceGrouped="True"
                          ItemsPath="Items"
                          >

      </CollectionViewSource>

      <ts:MenuItemTemplateSelector x:Key="MenuItemTemplateSelector">
        <ts:MenuItemTemplateSelector.MenuSeparator>
          <DataTemplate>
            <Border BorderThickness="0 1 0 0" BorderBrush="{ThemeResource AppBarBorderThemeBrush}" />
          </DataTemplate>
        </ts:MenuItemTemplateSelector.MenuSeparator>
        <ts:MenuItemTemplateSelector.MenuItem>
          <DataTemplate x:DataType="viewModel:MenuItemViewModel">
            <TextBlock Text="{x:Bind PageType, Converter={StaticResource LocalizeConverter}}" />
          </DataTemplate>
        </ts:MenuItemTemplateSelector.MenuItem>
      </ts:MenuItemTemplateSelector>


      <Thickness x:Key="NavigationViewHeaderMargin">0</Thickness>
      <Thickness x:Key="NavigationViewBorderThickness">0</Thickness>
         
      

    </ResourceDictionary>
  </Page.Resources>
  <Grid AllowDrop="True" DragEnter="Grid_DragEnter" Drop="Grid_Drop"
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
        x:Name="RootGrid"
        >
    <muxc:NavigationView uwpControls:DockPanel.Dock="Top" MenuItemsSource="{Binding MenuItems}" PaneDisplayMode="Top"
                    IsBackButtonVisible="Collapsed"
                    IsSettingsVisible="False"
                    x:Name="MyNavigtionView"
                    XYFocusDownNavigationStrategy="Projection"
                         SelectionFollowsFocus="Disabled"
                      >
      <muxc:NavigationView.PaneHeader>
        <Border x:Name="NavigationViewHeader" />
      </muxc:NavigationView.PaneHeader>
      
      <i:Interaction.Behaviors>
        <!--
        <core:EventTriggerBehavior EventName="ItemInvoked">
          <core:InvokeCommandAction Command="{x:Bind _vm.OpenMenuItemCommand}" InputConverter="{StaticResource NavigationViewItemInvokedEventArgsConverter}" />
        </core:EventTriggerBehavior>
        -->
      </i:Interaction.Behaviors>
      <muxc:NavigationView.MenuItemTemplate>
        <DataTemplate x:DataType="viewModel:MenuItemViewModel">
          <muxc:NavigationViewItem Content="{x:Bind Title}" DataContext="{x:Bind}" AccessKey="{x:Bind AccessKey}">
            <muxc:NavigationViewItem.KeyboardAccelerators>
              <KeyboardAccelerator Key="{x:Bind KeyboardAceseralator}" Modifiers="Control" />
            </muxc:NavigationViewItem.KeyboardAccelerators>
          </muxc:NavigationViewItem>
        </DataTemplate>
      </muxc:NavigationView.MenuItemTemplate>

      <muxc:NavigationView.AutoSuggestBox>
        <AutoSuggestBox PlaceholderText="{i18Ext:Localize Key=SearchPlaceholder}" 
                        QueryIcon="Find"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        x:Name="AutoSuggestBox"
                        Padding="0"
                        Width="196"                        
                        ItemsSource="{Binding Source={StaticResource AutoSuggestBoxItems}}"
                        TextMemberPath="Title"
                        UpdateTextOnSelect="False"
                        AutoMaximizeSuggestionArea="True"
                        IsSuggestionListOpen="True"   
                        IsFocusEngagementEnabled="True"
                        UseSystemFocusVisuals="True"
                        FocusVisualSecondaryBrush="{ThemeResource SystemAccentColor}"
                        AccessKey="F"
                        AccessKeyInvoked="AutoSuggestBox_AccessKeyInvoked"
                        >
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="QuerySubmitted">
              <core:InvokeCommandAction Command="{x:Bind _vm.SearchQuerySubmitCommand}" InputConverter="{StaticResource AutoSuggestBoxQuerySubmittedEventArgsConverter}" />
            </core:EventTriggerBehavior>
            <uiNavigation:UINavigationTriggerBehavior Kind="Cancel" IsRequireFocus="True">
              <core:CallMethodAction TargetObject="{x:Bind AutoSuggestBox}" MethodName="RemoveFocusEngagement" />
            </uiNavigation:UINavigationTriggerBehavior>
          </i:Interaction.Behaviors>

          <AutoSuggestBox.KeyboardAccelerators>
            <KeyboardAccelerator Key="F" Modifiers="Control" Invoked="KeyboardAccelerator_Invoked" />
          </AutoSuggestBox.KeyboardAccelerators>
          
          <AutoSuggestBox.ItemTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Name}" FontSize="12" TextWrapping="Wrap" />
            </DataTemplate>
          </AutoSuggestBox.ItemTemplate>
        </AutoSuggestBox>
      </muxc:NavigationView.AutoSuggestBox>

      <muxc:NavigationView.PaneFooter>
        <CommandBar x:Name="MenuRightCommandBar"
                    DefaultLabelPosition="Collapsed"
                    Background="Transparent"
                    Width="240"
                    >
          <CommandBar.PrimaryCommands>
            <AppBarButton x:Name="SelectionStartButton" Label="{i18Ext:Localize Key=StartMultiSelection}" Command="{x:Bind _vm.StartSelectionCommand}" AccessKey="M" KeyTipPlacementMode="Bottom">
              <AppBarButton.Icon>
                <fi:FluentIconElement Symbol="Multiselect24" />
              </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Label="{i18Ext:Localize Key=AddNewFolder}" Command="{x:Bind _vm.SourceChoiceCommand}" AccessKey="O" KeyTipPlacementMode="Bottom">
              <AppBarButton.Icon>
                <fi:FluentIconElement Symbol="ImageAdd24" />
              </AppBarButton.Icon>
            </AppBarButton>
          </CommandBar.PrimaryCommands>
          <CommandBar.SecondaryCommands>
            <AppBarButton Label="{i18Ext:Localize Key=RefreshLatest}" Command="{x:Bind _vm.RefreshNavigationCommand}" ToolTipService.ToolTip="{i18Ext:Localize Key=RefreshLatest}">
              <AppBarButton.Icon>
                <fi:FluentIconElement Symbol="ArrowSync24" />
              </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Label="{i18Ext:Localize Key=Settings}" Command="{x:Bind _vm.OpenPageCommand}" CommandParameter="SettingsPage" ToolTipService.ToolTip="{i18Ext:Localize Key=Settings}">
              <AppBarButton.Icon>
                <fi:FluentIconElement Symbol="Settings24" />
              </AppBarButton.Icon>
            </AppBarButton>

            <AppBarSeparator />
            <AppBarButton Label="{i18Ext:Localize Key=SendFeedbackWithMashmallow}" Command="{x:Bind _vm.SendFeedbackWithMashmallowCommand}" ToolTipService.ToolTip="{i18Ext:Localize Key=Settings}">
              <AppBarButton.Icon>
                <fi:FluentIconElement Symbol="PersonFeedback24" />
              </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Label="{i18Ext:Localize Key=SendFeedbackWithStoreReview}" Command="{x:Bind _vm.SendFeedbackWithStoreReviewCommand}" ToolTipService.ToolTip="{i18Ext:Localize Key=Settings}">
              <AppBarButton.Icon>
                <fi:FluentIconElement Symbol="PersonFeedback24" />
              </AppBarButton.Icon>
            </AppBarButton>

          </CommandBar.SecondaryCommands>
        </CommandBar>
      </muxc:NavigationView.PaneFooter>

      <Frame x:Name="ContentFrame" DataContext="{x:Null}" CacheSize="5"
             XYFocusDownNavigationStrategy="RectilinearDistance"
             />
    </muxc:NavigationView>

    <Grid x:Name="BusyWall" IsHitTestVisible="False" Opacity="0" Visibility="Collapsed">
      <Grid.Background>
        <SolidColorBrush Color="{ThemeResource SystemAltLowColor}" Opacity="0.5" />
      </Grid.Background>
      <StackPanel Spacing="32" VerticalAlignment="Center"
                  HorizontalAlignment="Stretch"
                  Background="{ThemeResource SystemChromeAltHighColor}"
                  Padding="48"
                  >

        <muxc:ProgressRing x:Name="BusyWall_ProgressRing" IsActive="False"
                         IsIndeterminate="True"
                           Height="64"
                           Width="64"
                           HorizontalAlignment="Center"
                         />

        <Button Content="{i18Ext:Localize Key=Cancel}"
                Command="{x:Bind CancelBusyWorkCommand}"
                MinWidth="200"
                Height="48"
                HorizontalAlignment="Center"
                Style="{ThemeResource AccentButtonStyle}"
                AccessKey="C"
                />


      </StackPanel>
    </Grid>

    <Border x:Name="NotificationContainer"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"    
            Padding="16 4"
            Background="{ThemeResource SystemChromeMediumLowColor}"
            BorderBrush="{ThemeResource SystemBaseLowColor}"
            BorderThickness="1"
            CornerRadius="4"
            Margin="16 64 16 16"
            IsHitTestVisible="False"
            >
      <ContentControl x:Name="NotificationContentControl"
                      Foreground="{ThemeResource SystemColorButtonFaceBrush}"
                      IsHitTestVisible="False"
                      IsTabStop="False"                      
                      FontSize="15"
                      MaxWidth="320"
                    >
      </ContentControl>
    </Border>
    
    <!--
    <StackPanel Orientation="Horizontal" Spacing="16" VerticalAlignment="Bottom">
      <Button Content="Show BusyWall">
        <i:Interaction.Behaviors>
          <core:EventTriggerBehavior EventName="Tapped">
            <core:GoToStateAction StateName="VS_ShowBusyWall" />
          </core:EventTriggerBehavior>
        </i:Interaction.Behaviors>
      </Button>
      <Button Content="Hide BusyWall">
        <i:Interaction.Behaviors>
          <core:EventTriggerBehavior EventName="Tapped">
            <core:GoToStateAction StateName="VS_HideBusyWall" />
          </core:EventTriggerBehavior>
        </i:Interaction.Behaviors>
      </Button>
    </StackPanel>
    -->
    


    <VisualStateManager.VisualStateGroups>

      <!-- ファイルオープンなど時間の掛かる操作時に他アクションを阻害する壁の表示切替 -->
      <VisualStateGroup>
        <VisualState x:Name="VS_HideBusyWall">
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.175"
                               To="0.0"
                               Storyboard.TargetName="BusyWall"
                               Storyboard.TargetProperty="Opacity"
                               />
            </Storyboard>
          </VisualState.Storyboard>
          <VisualState.Setters>
            <Setter Target="BusyWall.Visibility" Value="Collapsed" />
            <Setter Target="BusyWall.IsHitTestVisible" Value="False" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="VS_ShowBusyWall">
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.175"
                               BeginTime="{x:Bind _BusyWallDisplayDelayTime}"
                               To="1.0"
                               Storyboard.TargetName="BusyWall"
                               Storyboard.TargetProperty="Opacity"
                               />
            </Storyboard>
          </VisualState.Storyboard>
          <VisualState.Setters>
            <Setter Target="BusyWall.Visibility" Value="Visible" />
            <Setter Target="BusyWall.IsHitTestVisible" Value="True" />
            <Setter Target="BusyWall_ProgressRing.IsActive" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="1060" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuRightCommandBar.MinWidth" Value="480" />
            <Setter Target="MenuRightCommandBar.DefaultLabelPosition" Value="Right" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="820" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuRightCommandBar.MinWidth" Value="320" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="610" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuRightCommandBar.MaxWidth" Value="200" />
            <Setter Target="MenuRightCommandBar.Margin" Value="0 0 0 0" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuRightCommandBar.MaxWidth" Value="48" />
            <Setter Target="MenuRightCommandBar.Margin" Value="0 0 0 0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>


      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{x:Bind MyNavigtionView.IsPaneVisible, Mode=OneWay}" EqualTo="False" />
          </VisualState.StateTriggers>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:DeviceFamilyStateTrigger DeviceFamily="Xbox" />
            <StateTrigger IsActive="{StaticResource DebugTVMode}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MyNavigtionView.Margin" Value="0 27 0 0" />
            <Setter Target="NavigationViewHeader.Padding" Value="48 0 0 0" />
            <Setter Target="MenuRightCommandBar.Padding" Value="0 0 48 0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>

</Page>
