<Page
    x:Class="TsubameViewer.Views.ImageViewerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TsubameViewer.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:i="using:Microsoft.Xaml.Interactivity" 
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:myConv="using:TsubameViewer.Views.Converters"
  xmlns:wst="using:WindowsStateTriggers" 
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:myBehaviour="using:TsubameViewer.Views.Behaviors"
  xmlns:uwpUIExtensions="using:Microsoft.Toolkit.Uwp.UI" 
  xmlns:uiNavigation="using:TsubameViewer.Views.UINavigation"
  xmlns:domainModels="using:TsubameViewer.Core.Models" 
  xmlns:myStateTriggers="using:TsubameViewer.Views.StateTrigger" 
  xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
  xmlns:i18nExt="using:I18NPortable.Xaml.Extensions" 
  xmlns:models="using:TsubameViewer.Core.Models.FolderItemListing" 
  xmlns:viewModels="using:TsubameViewer.ViewModels" 
  xmlns:animation="using:Microsoft.Toolkit.Uwp.UI.Animations"
  xmlns:behaviours="using:Microsoft.Toolkit.Uwp.UI.Behaviors"
  xmlns:system="http://schemas.microsoft.com/winfx/2009/xaml"
  xmlns:Windows10version1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)" xmlns:fluentIcon="using:Fluent.Icons"
  mc:Ignorable="d"
    Background="{ThemeResource ApplicationContentBackgroundBrush}"
  >
  
  <Page.Resources>

    <Style TargetType="fluentIcon:FluentSymbolIcon">
      <Setter Property="IsTabStop" Value="False" />
    </Style>
    <myConv:SliderValueChangedEventArgsConverter x:Key="SliderValueChangedEventArgsConverter" />

    <MenuFlyout x:Key="OtherSettingsFlyout" Placement="BottomEdgeAlignedRight">
      <MenuFlyoutItem Text="No Item" IsEnabled="False" />
    </MenuFlyout>

    <Flyout x:Key="PageFlyout">
      <StackPanel Spacing="16">
        <TextBlock Text="{i18nExt:Localize Key=FileSortTitle}" />
        <DropDownButton x:Name="FileSortButton" 
                            Content="{x:Bind _vm.SelectedFileSortType.Value, Mode=OneWay, Converter={StaticResource LocalizeConverter}}"
                            Background="Transparent"
                            >
          <DropDownButton.Flyout>
            <MenuFlyout>
              <MenuFlyoutItem Text="{i18nExt:Localize Key=Sort_Unselected}" Command="{x:Bind _vm.ChangeFileSortCommand}"
                              CommandParameter="{x:Null}" />
              <MenuFlyoutItem Text="{i18nExt:Localize Key=FileSortType.UpdateTimeDecending}" Command="{x:Bind _vm.ChangeFileSortCommand}">
                <MenuFlyoutItem.CommandParameter>
                  <models:FileSortType>UpdateTimeDecending</models:FileSortType>
                </MenuFlyoutItem.CommandParameter>
              </MenuFlyoutItem>
              <MenuFlyoutItem Text="{i18nExt:Localize Key=FileSortType.UpdateTimeAscending}" Command="{x:Bind _vm.ChangeFileSortCommand}">
                <MenuFlyoutItem.CommandParameter>
                  <models:FileSortType>UpdateTimeAscending</models:FileSortType>
                </MenuFlyoutItem.CommandParameter>
              </MenuFlyoutItem>
              <MenuFlyoutItem Text="{i18nExt:Localize Key=FileSortType.TitleAscending}" Command="{x:Bind _vm.ChangeFileSortCommand}">
                <MenuFlyoutItem.CommandParameter>
                  <models:FileSortType>TitleAscending</models:FileSortType>
                </MenuFlyoutItem.CommandParameter>
              </MenuFlyoutItem>
              <MenuFlyoutItem Text="{i18nExt:Localize Key=FileSortType.TitleDecending}" Command="{x:Bind _vm.ChangeFileSortCommand}">
                <MenuFlyoutItem.CommandParameter>
                  <models:FileSortType>TitleDecending</models:FileSortType>
                </MenuFlyoutItem.CommandParameter>
              </MenuFlyoutItem>
            </MenuFlyout>
          </DropDownButton.Flyout>
        </DropDownButton>

        <Border uwpControls:DockPanel.Dock="Top" Visibility="{x:Bind _vm.DisplaySortTypeInheritancePath, Mode=OneWay, Converter={StaticResource StringNotEmptyToBooleanConverter}}">
          <TextBlock Opacity="0.7" TextWrapping="Wrap">
              <Run Text="{i18nExt:Localize Key=Sort_InheritancePath}" /> <LineBreak /> <Run Text="{x:Bind _vm.DisplaySortTypeInheritancePath, Mode=OneWay}" />
          </TextBlock>
        </Border>
      </StackPanel>
    </Flyout>

    

    <MenuFlyout x:Key="DesktopViewManagementFlyout">
      <MenuFlyoutItem Command="{StaticResource FullScreenToggleUICommand}"
                      x:Name="SwitchFullScreeMenuItem"
                      Visibility="Collapsed"
                      >
      </MenuFlyoutItem>
    </MenuFlyout>

    <XamlUICommand x:Key="ZoomResetUICommand" Command="{x:Bind ZoomResetCommand}"
                   Label="{i18nExt:Localize Key=ZoomReset}"   
                   Description="{i18nExt:Localize Key=ZoomReset}"
                   >
      <XamlUICommand.IconSource>
        <SymbolIconSource Symbol="Zoom" />
      </XamlUICommand.IconSource>
      <XamlUICommand.KeyboardAccelerators>
        <KeyboardAccelerator Key="X" />
        <KeyboardAccelerator Key="R" />
      </XamlUICommand.KeyboardAccelerators>
    </XamlUICommand>
    
    <XamlUICommand x:Key="ZoomInUICommand" Command="{x:Bind ZoomUpWithControllerCommand}"
                   Label="{i18nExt:Localize Key=ZoomIn}"   
                   Description="{i18nExt:Localize Key=ZoomIn}"
                   >
      <XamlUICommand.IconSource>
        <SymbolIconSource Symbol="ZoomIn" />
      </XamlUICommand.IconSource>
      <XamlUICommand.KeyboardAccelerators>
        <KeyboardAccelerator Key="Add" />
        <KeyboardAccelerator Key="W" />
        <KeyboardAccelerator Key="T" />
      </XamlUICommand.KeyboardAccelerators>
    </XamlUICommand>

    <XamlUICommand x:Key="ZoomOutUICommand" Command="{x:Bind ZoomDownWithControllerCommand}"
                   Label="{i18nExt:Localize Key=ZoomOut}"   
                   Description="{i18nExt:Localize Key=ZoomOut}"
                   >
      <XamlUICommand.IconSource>
        <SymbolIconSource Symbol="ZoomOut" />
      </XamlUICommand.IconSource>
      <XamlUICommand.KeyboardAccelerators>
        <KeyboardAccelerator Key="Subtract" />
        <KeyboardAccelerator Key="S" />
        <KeyboardAccelerator Key="Y" />
      </XamlUICommand.KeyboardAccelerators>
    </XamlUICommand>


    <XamlUICommand x:Key="FullScreenToggleUICommand" Command="{x:Bind _vm.ToggleFullScreenCommand}"
                   Label="{i18nExt:Localize Key=SwitchFullScreen}"     
                   >
      <XamlUICommand.IconSource>
        <fluentIcon:FluentIconSource Symbol="FullScreenMaximize24" />
      </XamlUICommand.IconSource>

      <XamlUICommand.KeyboardAccelerators>
        <KeyboardAccelerator Key="F11" />
      </XamlUICommand.KeyboardAccelerators>
    </XamlUICommand>

    <XamlUICommand x:Key="LeftBindingToggleUICommand" Command="{x:Bind _vm.ToggleLeftBindingCommand}"
                   Label="{i18nExt:Localize Key=IsLeftBindingView}"
                   Description="{i18nExt:Localize Key=IsLeftBindingView}"
                   >
      <XamlUICommand.IconSource>
        <fluentIcon:FluentIconSource Symbol="ArrowSort24" />
      </XamlUICommand.IconSource>

      <XamlUICommand.KeyboardAccelerators>
        <KeyboardAccelerator Key="O" />
      </XamlUICommand.KeyboardAccelerators>
    </XamlUICommand>
    
    <XamlUICommand x:Key="DoubleViewToggleUICommand" Command="{x:Bind _vm.ToggleDoubleViewCommand}"
                   Label="{i18nExt:Localize Key=IsEnableDoubleView}"
                   Description="{i18nExt:Localize Key=IsEnableDoubleView}"
                   >
      <XamlUICommand.IconSource>
        <SymbolIconSource Symbol="TwoPage" />
      </XamlUICommand.IconSource>
      <XamlUICommand.KeyboardAccelerators>
        <KeyboardAccelerator Key="I" />
      </XamlUICommand.KeyboardAccelerators>
    </XamlUICommand>


    <XamlUICommand x:Key="DoubleViewCorrectUICommand" Command="{x:Bind _vm.DoubleViewCorrectCommand}"
                   Label="{i18nExt:Localize Key=DoubleViewCorrectPaging}"
                   Description="{i18nExt:Localize Key=DoubleViewCorrectPaging}"
                   >
      <XamlUICommand.IconSource>
        <SymbolIconSource Symbol="Page2" />
      </XamlUICommand.IconSource>
      <XamlUICommand.KeyboardAccelerators>
        <KeyboardAccelerator Key="U" />
      </XamlUICommand.KeyboardAccelerators>
    </XamlUICommand>

    <XamlUICommand x:Key="GoNextImageUICommand" Command="{x:Bind ReversableGoNextCommand}" 
                   Label="{i18nExt:Localize Key=GoNextPage}"
                   Description="{i18nExt:Localize Key=GoNextPage}"
                   >
      <XamlUICommand.IconSource>
        <SymbolIconSource Symbol="Forward" />
      </XamlUICommand.IconSource>
    </XamlUICommand>

    <XamlUICommand x:Key="GoPrevImageUICommand" Command="{x:Bind ReversableGoPrevCommand}"
                   Label="{i18nExt:Localize Key=GoNextPage}"
                   Description="{i18nExt:Localize Key=GoNextPage}"
                   >
      <XamlUICommand.IconSource>
        <SymbolIconSource Symbol="Back" />
      </XamlUICommand.IconSource>
    </XamlUICommand>

  </Page.Resources>

  
  
  <!-- Note: IsHitTestVisible="True" Background="Transparent" が無いと
             マウススクロールが反応しない問題が発生する 
  -->
  <Grid x:Name="RootGrid" uwpUIExtensions:FrameworkElementExtensions.EnableActualSizeBinding="True"
        IsHitTestVisible="True" Background="Transparent"
        ContextFlyout="{StaticResource DesktopViewManagementFlyout}"
        >
    
    <i:Interaction.Behaviors>
      
      <!-- Mouse Input-->
      <myBehaviour:MouseWheelTrigger x:Name="DefaultMouseWheelTrigger">
        <myBehaviour:MouseWheelTrigger.UpActions>
          <core:InvokeCommandAction Command="{x:Bind _vm.GoPrevImageCommand}" />
        </myBehaviour:MouseWheelTrigger.UpActions>
        <myBehaviour:MouseWheelTrigger.DownActions>
          <core:InvokeCommandAction Command="{x:Bind _vm.GoNextImageCommand}"  />
        </myBehaviour:MouseWheelTrigger.DownActions>
      </myBehaviour:MouseWheelTrigger>
      <myBehaviour:MouseWheelTrigger x:Name="ReverseMouseWheelTrigger" IsEnabled="False">
        <myBehaviour:MouseWheelTrigger.UpActions>
          <core:InvokeCommandAction Command="{x:Bind _vm.GoNextImageCommand}"  />
        </myBehaviour:MouseWheelTrigger.UpActions>
        <myBehaviour:MouseWheelTrigger.DownActions>
          <core:InvokeCommandAction Command="{x:Bind _vm.GoPrevImageCommand}" />
        </myBehaviour:MouseWheelTrigger.DownActions>
      </myBehaviour:MouseWheelTrigger>
      <myBehaviour:MouseCenterClickTrigger>
        <core:InvokeCommandAction Command="{Binding ToggleFullScreenCommand}" />
      </myBehaviour:MouseCenterClickTrigger>

      <myBehaviour:MouseWheelTrigger x:Name="ZommingMouseWheelTrigger" IsEnabled="False">
        <myBehaviour:MouseWheelTrigger.UpActions>
          <core:InvokeCommandAction Command="{x:Bind ZoomUpCommand}" />
        </myBehaviour:MouseWheelTrigger.UpActions>
        <myBehaviour:MouseWheelTrigger.DownActions>
          <core:InvokeCommandAction Command="{x:Bind ZoomDownCommand}" />
        </myBehaviour:MouseWheelTrigger.DownActions>
      </myBehaviour:MouseWheelTrigger>

      <myBehaviour:PointerCursolAutoHideBehavior x:Name="PointerCursolAutoHideBehavior" IsAutoHideEnabled="False" />

      <!-- GamePad Input-->
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadLeftTriggerBehavior" Kind="Left" IsRequireFocus="True">
        <core:InvokeCommandAction Command="{StaticResource GoNextImageUICommand}"  />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadRightTriggerBehavior" Kind="Right" IsRequireFocus="True">
        <core:InvokeCommandAction Command="{StaticResource GoPrevImageUICommand}" />
      </uiNavigation:UINavigationTriggerBehavior>

      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadRTTriggerBehavior" Kind="PageUp" IsRequireFocus="True" IsEnabled="True">
        <core:InvokeCommandAction Command="{x:Bind ZoomDownWithControllerCommand, Mode=OneTime}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadLTTriggerBehavior" Kind="PageDown" IsRequireFocus="True" IsEnabled="True">
        <core:InvokeCommandAction Command="{x:Bind ZoomUpWithControllerCommand, Mode=OneTime}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadRightStickRightTriggerBehavior" Kind="ScrollRight" IsRequireFocus="True" IsEnabled="True">
        <core:InvokeCommandAction Command="{x:Bind ZoomCenterMoveRightCommand, Mode=OneTime}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadRightStickLeftTriggerBehavior" Kind="ScrollLeft" IsRequireFocus="True" IsEnabled="True">
        <core:InvokeCommandAction Command="{x:Bind ZoomCenterMoveLeftCommand, Mode=OneTime}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadRightStickUpTriggerBehavior" Kind="ScrollUp" IsRequireFocus="True" IsEnabled="True">
        <core:InvokeCommandAction Command="{x:Bind ZoomCenterMoveUpCommand, Mode=OneTime}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadRightStickDownTriggerBehavior" Kind="ScrollDown" IsRequireFocus="True" IsEnabled="True">
        <core:InvokeCommandAction Command="{x:Bind ZoomCenterMoveDownCommand, Mode=OneTime}" />
      </uiNavigation:UINavigationTriggerBehavior>

      <uiNavigation:UINavigationTriggerBehavior Kind="View">
        <core:InvokeCommandAction x:Name="GamePadBottomUIToggleAction" Command="{x:Bind ToggleBottomMenuCommand}" />
      </uiNavigation:UINavigationTriggerBehavior>


    </i:Interaction.Behaviors>

    <Grid x:Name="ContentContainer">
      <Grid.RenderTransform>
        <TranslateTransform />
      </Grid.RenderTransform>

      <Grid uwpUIExtensions:FrameworkElementExtensions.EnableActualSizeBinding="True"
            x:Name="ImagesContainer"
            Background="Transparent"
            IsTapEnabled="True"
            >

        <i:Interaction.Behaviors>
          <!-- Image sizing -->
          <core:EventTriggerBehavior EventName="Loaded">
            <core:ChangePropertyAction TargetObject="{x:Bind _vm.CanvasWidth, Mode=OneWay}" PropertyName="Value" Value="{Binding ElementName=ImagesContainer, Path=(uwpUIExtensions:FrameworkElementExtensions.ActualWidth)}" />
            <core:ChangePropertyAction TargetObject="{x:Bind _vm.CanvasHeight,Mode=OneWay}" PropertyName="Value" Value="{Binding ElementName=ImagesContainer, Path=(uwpUIExtensions:FrameworkElementExtensions.ActualHeight)}" />
          </core:EventTriggerBehavior>
          <core:EventTriggerBehavior EventName="SizeChanged">
            <core:ChangePropertyAction TargetObject="{x:Bind _vm.CanvasWidth, Mode=OneWay}" PropertyName="Value" Value="{Binding ElementName=ImagesContainer, Path=(uwpUIExtensions:FrameworkElementExtensions.ActualWidth)}" />
            <core:ChangePropertyAction TargetObject="{x:Bind _vm.CanvasHeight, Mode=OneWay}" PropertyName="Value" Value="{Binding ElementName=ImagesContainer, Path=(uwpUIExtensions:FrameworkElementExtensions.ActualHeight)}" />
            <core:InvokeCommandAction Command="{x:Bind _vm.SizeChangedCommand, Mode=OneWay}" />
          </core:EventTriggerBehavior>
        </i:Interaction.Behaviors>
        <Grid.Resources>
          <Style TargetType="muxc:ItemsRepeater">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalCacheLength" Value="100000" />
            <Setter Property="HorizontalCacheLength" Value="100000" />
            <Setter Property="ItemTemplate">
              <Setter.Value>
                <DataTemplate x:DataType="BitmapImage">
                  <Image Source="{x:Bind}" Stretch="Uniform" />
                </DataTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="Layout">
              <Setter.Value>
                <muxc:StackLayout Orientation="Horizontal" />
              </Setter.Value>
            </Setter>
          </Style>
        </Grid.Resources>

        <muxc:ItemsRepeater ItemsSource="{x:Bind _vm.DisplayImages_0, Mode=OneWay}"
                    x:Name="ImageItemsControl_0"   
                            DataContext="{x:Null}"
                    >
          <muxc:ItemsRepeater.RenderTransform>
            <TranslateTransform X="-10000" />
          </muxc:ItemsRepeater.RenderTransform>
        </muxc:ItemsRepeater>

        <muxc:ItemsRepeater ItemsSource="{x:Bind _vm.DisplayImages_1, Mode=OneWay}"
                    x:Name="ImageItemsControl_1"  
                            DataContext="{x:Null}"
                    >
          <muxc:ItemsRepeater.RenderTransform>
            <TranslateTransform X="-10000" />
          </muxc:ItemsRepeater.RenderTransform>
        </muxc:ItemsRepeater>
        <muxc:ItemsRepeater ItemsSource="{x:Bind _vm.DisplayImages_2, Mode=OneWay}"
                    x:Name="ImageItemsControl_2"  
                            DataContext="{x:Null}"
                    >
          <muxc:ItemsRepeater.RenderTransform>
            <TranslateTransform X="-10000" />
          </muxc:ItemsRepeater.RenderTransform>
        </muxc:ItemsRepeater>
      </Grid>

      <Grid >
        <Rectangle x:Name="ImageLoadingBarrier" Stretch="UniformToFill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Black" Opacity="0.0"  />
      </Grid>
    </Grid>


    <!-- コントロールUI（共通）-->
    <Grid x:Name="UIContainer" >
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="1.5*" />
        <ColumnDefinition Width="6*" />
        <ColumnDefinition Width="1.5*" />
      </Grid.ColumnDefinitions>
      <Button x:Name="LeftPageMoveButton"
        Command="{StaticResource GoNextImageUICommand}" 
              Grid.Column="0"
              Opacity="0"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"                         
              >
        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Left" />
          <KeyboardAccelerator Key="LeftButton" />
          <KeyboardAccelerator Key="A" />
        </Button.KeyboardAccelerators>

        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
          <SymbolIcon Symbol="Back" />
        </Border>

      </Button>

      <Border x:Name="ToggleMenuButton"
              Grid.Column="1"
              Grid.ColumnSpan="1"
              Opacity="0" 
              IsHitTestVisible="True"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"
              Background="Transparent"
              />

      <Button x:Name="RightPageMoveButton"
        Command="{StaticResource GoPrevImageUICommand}"
              Grid.Column="2"
              Opacity="0"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"                  
              >
        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Right" />
          <KeyboardAccelerator Key="RightButton" />
          <KeyboardAccelerator Key="D" />
        </Button.KeyboardAccelerators>

        <SymbolIcon Symbol="Forward" />
      </Button>

      <Button x:Name="Hidden_GoNextButton" 
              Command="{StaticResource GoNextImageUICommand}"
              Height="0" Width="0"
              KeyboardAcceleratorPlacementMode="Hidden"
              />
      <Button x:Name="Hidden_GoPrevButton" 
              Command="{StaticResource GoPrevImageUICommand}"
              Height="0" Width="0"
              KeyboardAcceleratorPlacementMode="Hidden"
              />
      <Button x:Name="Hidden_ZoomInButton" 
              Command="{StaticResource ZoomInUICommand}"
              Height="0" Width="0"
              KeyboardAcceleratorPlacementMode="Hidden"
              />
      <Button x:Name="Hidden_ZoomOutButton" 
              Command="{StaticResource ZoomOutUICommand}"
              Height="0" Width="0"
              KeyboardAcceleratorPlacementMode="Hidden"
              />
      <Button x:Name="Hidden_ZoomResetButton" 
              Command="{StaticResource ZoomResetUICommand}"
              Height="0" Width="0"
              KeyboardAcceleratorPlacementMode="Hidden"
              />
      <Button x:Name="Hidden_DoubleViewCorrectButton" 
              Command="{StaticResource DoubleViewCorrectUICommand}"
              Height="0" Width="0"
              KeyboardAcceleratorPlacementMode="Hidden"
              />
    </Grid>

    <Grid x:Name="IntaractionWall" IsTapEnabled="True" Background="Transparent" />
    
    <!-- ボタン類 -->
    <StackPanel x:Name="ButtonsContainer" 
                Background="{ThemeResource SystemChromeMediumHighColor}"  
                Grid.ColumnSpan="3"
                VerticalAlignment="Top" 
                HorizontalAlignment="Center"
                IsHitTestVisible="True"
                CornerRadius="8"
                Orientation="Horizontal"
                Padding="4 4"
                Margin="0 48 0 0"
                Spacing="4"             
                Windows10version1903:Translation="0, 0, 16"
                >
      <Windows10version1903:StackPanel.Shadow>
        <ThemeShadow  />
      </Windows10version1903:StackPanel.Shadow>

      <animation:Implicit.ShowAnimations>
        <animation:TranslationAnimation To="0, 0" EasingType="Cubic" Duration="0:0:0.175" />
      </animation:Implicit.ShowAnimations>
      <animation:Implicit.HideAnimations>
        <animation:TranslationAnimation To="0, -88" EasingType="Cubic" Duration="0:0:0.175" />
      </animation:Implicit.HideAnimations>

      <StackPanel.Resources>
        <Style TargetType="Button">
          <Setter Property="Height" Value="40" />
          <Setter Property="Width" Value="40" />
          <Setter Property="Padding" Value="0" />
          <Setter Property="CornerRadius" Value="4" />
          <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style TargetType="ToggleButton">
          <Setter Property="Height" Value="40" />
          <Setter Property="Width" Value="40" />
          <Setter Property="Padding" Value="0" />
          <Setter Property="CornerRadius" Value="4" />
          <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style TargetType="SymbolIcon">
          <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
          <Setter Property="RenderTransform">
            <Setter.Value>
              <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
            </Setter.Value>
          </Setter>
        </Style>
      </StackPanel.Resources>

      <Button x:Name="BottomUIBackNavigationButton" Click="ForceClosePage"
              AccessKey="Q"
              >
        <SymbolIcon Symbol="Clear" />

        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Escape" Modifiers="Shift" />
        </Button.KeyboardAccelerators>
      </Button>

      <Border Width="12" />

      <Button x:Name="ZoomResetButton" Command="{StaticResource ZoomResetUICommand}" AccessKey="R">
        <SymbolIcon Symbol="Zoom" />
      </Button>

      <Button x:Name="ZoomInButton" Command="{StaticResource ZoomInUICommand}" AccessKey="T">
        <SymbolIcon Symbol="ZoomIn" />
      </Button>

      <Button x:Name="ZoomOutButton" Command="{StaticResource ZoomOutUICommand}" AccessKey="Y">
        <SymbolIcon Symbol="ZoomOut" />
      </Button>

      <Button x:Name="DoubleViewCorrectButton" 
              Command="{StaticResource DoubleViewCorrectUICommand}"
              IsHitTestVisible="{x:Bind _vm.IsDoubleViewEnabled.Value, Mode=OneWay}"
              Foreground="{ThemeResource ButtonDisabledForegroundThemeBrush}"
              AccessKey="U"
              >
        <Button.Content>
          <Grid>
            <fluentIcon:FluentSymbolIcon Symbol="BookPulse24">
              <fluentIcon:FluentSymbolIcon.RenderTransform>
                <TranslateTransform X="-2" Y="-1"/>
              </fluentIcon:FluentSymbolIcon.RenderTransform>
            </fluentIcon:FluentSymbolIcon>
          </Grid>
        </Button.Content>
        
      </Button>

      <ToggleButton x:Name="DoubleViewToggleButton" IsChecked="{x:Bind _vm.IsDoubleViewEnabled.Value, Mode=OneWay}" 
                    Command="{StaticResource DoubleViewToggleUICommand}"  
                    AccessKey="I"
                    >
        <ToggleButton.Content>
          <fluentIcon:FluentSymbolIcon Symbol="BookOpen24" Foreground="{ThemeResource ApplicationForegroundThemeBrush}">
            <fluentIcon:FluentSymbolIcon.RenderTransform>
              <TranslateTransform X="-1" Y="-1"/>
            </fluentIcon:FluentSymbolIcon.RenderTransform>
          </fluentIcon:FluentSymbolIcon>
        </ToggleButton.Content>
      </ToggleButton>

      <ToggleButton x:Name="LeftBindingToggleButton" IsChecked="{x:Bind _vm.IsLeftBindingEnabled.Value, Mode=OneWay}" 
                    Command="{StaticResource LeftBindingToggleUICommand}"
                    AccessKey="O"
                    >
        <ToggleButton.Content>
          <fluentIcon:FluentSymbolIcon Symbol="ArrowImport20Filled">
            <fluentIcon:FluentSymbolIcon.RenderTransform>
              <TranslateTransform X="-1" Y="-1"/>
            </fluentIcon:FluentSymbolIcon.RenderTransform>
          </fluentIcon:FluentSymbolIcon>
        </ToggleButton.Content>
      </ToggleButton>
      
      <Button x:Name="ImagesSortButton" Flyout="{StaticResource PageFlyout}" 
              AccessKey="P"
              >
        <Button.Content>
          <fluentIcon:FluentSymbolIcon Symbol="TextSortAscending24" />
        </Button.Content>
      </Button>

      
      <Button x:Name="OthersSettingsButton" Flyout="{StaticResource OtherSettingsFlyout}"
              XYFocusLeft="{x:Bind ImagesSortButton}"
              Visibility="Collapsed"
                  >
        <SymbolIcon Symbol="More" />
      </Button>

    </StackPanel>



    <Border x:Name="ImageSelectorContainer" Background="{ThemeResource SystemChromeMediumHighColor}" 
              Grid.ColumnSpan="3"
              VerticalAlignment="Bottom"
              HorizontalAlignment="Center"
            MinWidth="380"
              MaxWidth="420"
              CornerRadius="8"
              Margin="0 0 0 16"
            Windows10version1903:Translation="0, 0, 16"
              >

      <Windows10version1903:Border.Shadow>
        <Windows10version1903:ThemeShadow  />
      </Windows10version1903:Border.Shadow>
      
      <animation:Implicit.ShowAnimations>
        <animation:TranslationAnimation To="0, 0" EasingType="Cubic" Duration="0:0:0.175" />
      </animation:Implicit.ShowAnimations>
      <animation:Implicit.HideAnimations>
        <animation:TranslationAnimation To="0, 180" EasingType="Cubic" Duration="0:0:0.175" />
      </animation:Implicit.HideAnimations>

      <StackPanel Margin="8" Spacing="6">

        <Grid>
          <Grid.Resources>
            <ScaleTransform x:Key="FavoriteIconTransform" ScaleX="0.9" ScaleY="0.9" />
          </Grid.Resources>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="16" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>

          <muxc:DropDownButton x:Name="Page1ActionButton" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="0 0 0 0" IsAccessKeyScope="True"
                               AccessKey="1"
                               >
            <muxc:DropDownButton.KeyboardAccelerators>
              <KeyboardAccelerator Key="Number1" Invoked="{x:Bind ShowBottomUI}" />
            </muxc:DropDownButton.KeyboardAccelerators>
            <uwpControls:DockPanel>
              <SymbolIcon Symbol="Favorite" Visibility="{x:Bind _vm.Page1Favorite, Mode=OneWay}" uwpControls:DockPanel.Dock="Left" Margin="0 0 4 0" RenderTransform="{StaticResource FavoriteIconTransform}" RenderTransformOrigin="0.5, 0.5" />
              <TextBlock x:Name="Page1NameTextBlock" VerticalAlignment="Center" FontSize="12" Margin="0 0 0 0"  HorizontalAlignment="Center" TextWrapping="Wrap" MaxLines="1" TextTrimming="CharacterEllipsis"                                                  
                         >
                <Run Text="{x:Bind _vm.Page1Name, Mode=OneWay}" />
              </TextBlock>
            </uwpControls:DockPanel>

            <muxc:DropDownButton.Flyout>
              <MenuFlyout Opening="Page1MenuFlyout_Opening">
                <MenuFlyoutSubItem x:Name="Page1AlbamAddItemButton" Text="{i18nExt:Localize Key=AlbamItemAdd}" DataContext="{x:Bind _vm.CurrentDisplayImageSources[0], Mode=OneWay}">
                  
                </MenuFlyoutSubItem>
                <MenuFlyoutItem x:Name="Page1SetThubmailImageButton" AccessKey="T" Text="{i18nExt:Localize Key=SetThumbnailImage}" CommandParameter="{x:Bind _vm.CurrentDisplayImageSources[0], Mode=OneWay}" Command="{x:Bind _vm.ChangeStorageItemThumbnailImageCommand}">
                  <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="T" />
                  </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator x:Name="Page1ThumbnailImageSeparator" />
                <MenuFlyoutItem x:Name="Page1OpenWithExplorerButton" AccessKey="G" Text="{i18nExt:Localize Key=OpenWithExplorer}" CommandParameter="{x:Bind _vm.CurrentDisplayImageSources[0], Mode=OneWay}" Command="{x:Bind _vm.OpenWithExplorerCommand}" >
                  <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="G" />
                  </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem x:Name="Page1OpenWithExternalAppButton" AccessKey="B" Text="{i18nExt:Localize Key=OpenWithExternalApplication}" CommandParameter="{x:Bind _vm.CurrentDisplayImageSources[0], Mode=OneWay}" Command="{x:Bind _vm.OpenWithExternalApplicationCommand}">
                  <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="B" />
                  </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
              </MenuFlyout>
            </muxc:DropDownButton.Flyout>
          </muxc:DropDownButton >
          <muxc:DropDownButton x:Name="Page2ActionButton" Grid.Column="2" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="0 0 0 0" IsAccessKeyScope="True"
                               AccessKey="2"
                               >
            <muxc:DropDownButton.KeyboardAccelerators>
              <KeyboardAccelerator Key="Number2" />
            </muxc:DropDownButton.KeyboardAccelerators>
            
            <uwpControls:DockPanel>
              <SymbolIcon Symbol="Favorite" Visibility="{x:Bind _vm.Page2Favorite, Mode=OneWay}" uwpControls:DockPanel.Dock="Left" Margin="0 0 4 0" RenderTransform="{StaticResource FavoriteIconTransform}" RenderTransformOrigin="0.5, 0.5" />
              <TextBlock x:Name="Page2NameTextBlock"  VerticalAlignment="Center" FontSize="12" Margin="0 0 0 0"  HorizontalAlignment="Center" TextWrapping="Wrap" MaxLines="1" TextTrimming="CharacterEllipsis">
              <Run Text="{x:Bind _vm.Page2Name, Mode=OneWay}" />
              </TextBlock>
            </uwpControls:DockPanel>

            <muxc:DropDownButton.Flyout>
              <MenuFlyout Opening="Page2MenuFlyout_Opening">
                <MenuFlyoutSubItem x:Name="Page2AlbamAddItemButton" Text="{i18nExt:Localize Key=AlbamItemAdd}" DataContext="{x:Bind _vm.CurrentDisplayImageSources[1], Mode=OneWay}">

                </MenuFlyoutSubItem>
                <MenuFlyoutItem x:Name="Page2SetThubmailImageButton" AccessKey="T" Text="{i18nExt:Localize Key=SetThumbnailImage}" CommandParameter="{x:Bind _vm.CurrentDisplayImageSources[1], Mode=OneWay}" Command="{x:Bind _vm.ChangeStorageItemThumbnailImageCommand}">
                  <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="T" />
                  </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator x:Name="Page2ThumbnailImageSeparator" />
                <MenuFlyoutItem x:Name="Page2OpenWithExplorerButton" AccessKey="G" Text="{i18nExt:Localize Key=OpenWithExplorer}" CommandParameter="{x:Bind _vm.CurrentDisplayImageSources[1], Mode=OneWay}" Command="{x:Bind _vm.OpenWithExplorerCommand}">
                  <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="G" />
                  </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem x:Name="Page2OpenWithExternalAppButton" AccessKey="B" Text="{i18nExt:Localize Key=OpenWithExternalApplication}" CommandParameter="{x:Bind _vm.CurrentDisplayImageSources[1], Mode=OneWay}" Command="{x:Bind _vm.OpenWithExternalApplicationCommand}">
                  <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="B" />
                  </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
              </MenuFlyout>
            </muxc:DropDownButton.Flyout>
          </muxc:DropDownButton>
        </Grid>
        

        
        <!-- ComboBox に対するフォーカス移動が意図どおり出来ないので
             XYFocus*を使って強制的に移動先を指定している 
        -->
        <ComboBox x:Name="PageFolderNamesSelector" uwpControls:DockPanel.Dock="Top"
                  ItemsSource="{Binding PageFolderNames}"
                  SelectedItem="{Binding PageFolderName, Mode=TwoWay}"
                  SelectionChangedTrigger="Committed"
                  ToolTipService.ToolTip="{i18nExt:Localize Key=CurrentFolder_InArchive}"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Center"
                  Margin="0 4"
                  AccessKey="3"
                  >
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="SelectionChanged">
              <core:InvokeCommandAction Command="{Binding ChangePageFolderCommand}" >
                <core:InvokeCommandAction.InputConverter>
                  <local:SelectorSelectedChangedToStringConverter />
                </core:InvokeCommandAction.InputConverter>
              </core:InvokeCommandAction>
              <core:CallMethodAction TargetObject="{Binding ElementName=PageFlyout}" MethodName="Hide" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>

          <ComboBox.KeyboardAccelerators>
            <KeyboardAccelerator Key="3" />
          </ComboBox.KeyboardAccelerators>
        </ComboBox>


        <Slider x:Name="PageSelector" uwpControls:DockPanel.Dock="Bottom"
                Value="{Binding CurrentImageIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Minimum="0"
                Maximum="{Binding Images.Length, Converter={StaticResource NumberMinus1Converter}}"
                ThumbToolTipValueConverter="{StaticResource NumberStartFrom1Converter}"
                TickFrequency="1"
                StepFrequency="1"
                Padding="0"     
                Margin="0 0"       
                XYFocusDown="{x:Bind PageFolderNamesSelector}"
                FlowDirection="RightToLeft"
                AccessKey="4"
                >
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="ValueChanged">
              <core:InvokeCommandAction Command="{Binding ChangePageCommand}" InputConverter="{StaticResource SliderValueChangedEventArgsConverter}" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>

          <Slider.KeyboardAccelerators>
            <KeyboardAccelerator Key="4" />
          </Slider.KeyboardAccelerators>
        </Slider>

        <TextBlock VerticalAlignment="Center" FontSize="12" Margin="0 0" HorizontalAlignment="Right" uwpControls:DockPanel.Dock="Bottom">

          <TextBlock.RenderTransform>
            <TranslateTransform Y="-6" />
          </TextBlock.RenderTransform>
          <Run Text="{x:Bind _vm.DisplayCurrentImageIndex.Value, Mode=OneWay}" />/<Run Text="{Binding Images.Length}" />
        </TextBlock>

      </StackPanel>

    </Border>

    <Grid x:Name="ZoomingControlUI" Visibility="Collapsed"
          Background="{ThemeResource SystemChromeMediumHighColor}"
          Windows10version1903:Translation="0, 0, 16"
          VerticalAlignment="Top"
          HorizontalAlignment="Center"
          Margin="16 48 16 0"
          Padding="16 8"
          CornerRadius="8"
          IsHitTestVisible="False"
          >
      <Windows10version1903:Grid.Shadow>
        <Windows10version1903:ThemeShadow />
      </Windows10version1903:Grid.Shadow>

      <animation:Implicit.ShowAnimations>
        <animation:OpacityAnimation To="1.0" Duration="0:0:0.175" />
      </animation:Implicit.ShowAnimations>
      <animation:Implicit.HideAnimations>
        <animation:OpacityAnimation To="0" Duration="0:0:0.175" />
      </animation:Implicit.HideAnimations>

      <animation:Explicit.Animations>
        <animation:AnimationSet x:Name="ShowWithinButtonsContainer">
          <animation:TranslationAnimation To="0, 56" EasingType="Cubic" Duration="0:0:0.175" />
        </animation:AnimationSet>
        <animation:AnimationSet x:Name="ShowWithoutButtonsContainer">
          <animation:TranslationAnimation To="0, 0" EasingType="Cubic" Duration="0:0:0.175" />
        </animation:AnimationSet>
      </animation:Explicit.Animations>


      <i:Interaction.Behaviors>
        <core:DataTriggerBehavior Binding="{x:Bind ButtonsContainer.Visibility, Mode=OneWay}" Value="Visible" >
          <behaviours:StartAnimationAction Animation="{Binding ElementName=ShowWithinButtonsContainer}" />
        </core:DataTriggerBehavior>
        <core:DataTriggerBehavior Binding="{x:Bind ButtonsContainer.Visibility, Mode=OneWay}" Value="Collapsed" >
          <behaviours:StartAnimationAction Animation="{Binding ElementName=ShowWithoutButtonsContainer}" />
        </core:DataTriggerBehavior>
      </i:Interaction.Behaviors>


      <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" >
        x<Run Text="{x:Bind ToDisplayString(ZoomFactor), Mode=OneWay}" />
      </TextBlock>
    </Grid>
    
    <!-- 補助コントロールUI（デスクトップ） -->
    <Grid Height="32" x:Name="Toolbar_Desktop" VerticalAlignment="Top" Opacity="1.0" Background="{ThemeResource ApplicationHeaderBackgroundBrush}" >
      <Grid.RenderTransform>
        <TranslateTransform Y="-1" />
      </Grid.RenderTransform>

      <Grid x:Name="DraggableTitleBarArea_Desktop" IsHitTestVisible="True" Background="Transparent"  Height="32" VerticalAlignment="Top" />

      <uwpControls:DockPanel x:Name="TopBarContainer" Visibility="Collapsed">
        <Button Command="{x:Bind _vm.BackNavigationCommand}" uwpControls:DockPanel.Dock="Left" Height="32" Width="48" Style="{ThemeResource AccentButtonStyle}" Opacity="0.6">
          <SymbolIcon Symbol="Back">
            <SymbolIcon.RenderTransform>
              <ScaleTransform ScaleX="0.6" ScaleY="0.6" CenterX="10" CenterY="10" />
            </SymbolIcon.RenderTransform>
          </SymbolIcon>
        </Button>

        <!--
        <Border BorderBrush="{ThemeResource SystemBaseMediumLowColor}" BorderThickness="0 0 0 0"
                uwpControls:DockPanel.Dock="Right" Margin="0 6 184 6"
                />
        -->

        <Border BorderBrush="{ThemeResource SystemBaseMediumLowColor}" BorderThickness="0 0 0 0"
                uwpControls:DockPanel.Dock="Right" Margin="0 6 144 6"
                MinWidth="40"
                >
          <TextBlock VerticalAlignment="Center" FontSize="12" Margin="8 0 0 0" HorizontalAlignment="Right" uwpControls:DockPanel.Dock="Bottom">
            <Run Text="{x:Bind _vm.DisplayCurrentImageIndex.Value, Mode=OneWay}" />/<Run Text="{Binding Images.Length}" />
          </TextBlock>

        </Border>
        
        <StackPanel Orientation="Horizontal" uwpControls:DockPanel.Dock="Right" Spacing="8">
          <Button Height="40" MaxWidth="120" Background="Transparent" Command="{StaticResource FullScreenToggleUICommand}" Opacity="0.7">
            <Button.RenderTransform>
              <TranslateTransform Y="1" />
            </Button.RenderTransform>
          </Button>
        </StackPanel>

        <StackPanel Orientation="Horizontal" Spacing="4">

          <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="12" Margin="8 0" IsHitTestVisible="False">
              <Run Text="{x:Bind _vm.Title, Mode=OneWay}" />
          </TextBlock>
        </StackPanel>
      </uwpControls:DockPanel>
    </Grid>

    <VisualStateManager.VisualStateGroups>

      <!-- 画像読み込み中の画面演出 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.NowImageLoadingLongRunning, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.05"
                               To="0.25"
                               Storyboard.TargetName="ImageLoadingBarrier"
                               Storyboard.TargetProperty="Opacity"
                               />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="True" />
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.125"
                               To="0.0"
                               Storyboard.TargetName="ImageLoadingBarrier"
                               Storyboard.TargetProperty="Opacity"
                               />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>

      </VisualStateGroup>


      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{x:Bind _vm.CurrentDisplayImageIndex, Mode=OneWay}" EqualTo="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ImageItemsControl_0.(UIElement.RenderTransform).(TranslateTransform.X)" Value="0" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{x:Bind _vm.CurrentDisplayImageIndex, Mode=OneWay}" EqualTo="1" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ImageItemsControl_1.(UIElement.RenderTransform).(TranslateTransform.X)" Value="0" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{x:Bind _vm.CurrentDisplayImageIndex, Mode=OneWay}" EqualTo="2" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ImageItemsControl_2.(UIElement.RenderTransform).(TranslateTransform.X)" Value="0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- マウスカーソルの自動非表示 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <myStateTriggers:PointerCollisionTrigger Target="{x:Bind RootGrid}" CollisionRect="0 0 5000 64" />
            <StateTrigger IsActive="{x:Bind IsReadyToImageDisplay, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
            <myStateTriggers:VirualKeyPressingTrigger Key="Control" myBehaviour:DependencyObjectExtensions.DisposeOnUnloadedTarget="{x:Bind}" />
            <StateTrigger IsActive="{x:Bind IsZoomingEnabled, Mode=OneWay}"  />
            <StateTrigger IsActive="{x:Bind IsOpenBottomMenu, Mode=OneWay}"  />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PointerCursolAutoHideBehavior.IsAutoHideEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:CompositeStateTrigger Operator="And">
              <wst:UserInteractionModeTrigger InteractionMode="Mouse" />
              <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
            </wst:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PointerCursolAutoHideBehavior.IsAutoHideEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

            
      <!-- フルスクリーン -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:CompositeStateTrigger Operator="And">
              <wst:FullScreenModeTrigger IsFullScreen="True" />
              <myStateTriggers:PointerCollisionTrigger Target="{x:Bind RootGrid}" CollisionRect="0 0 5000 64" />
            </wst:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.175"
                               To="-1"
                               Storyboard.TargetName="Toolbar_Desktop"
                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                               />
              <DoubleAnimation Duration="0:0:0.175"
                               To="32"
                               Storyboard.TargetName="ContentContainer"
                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                               />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:FullScreenModeTrigger IsFullScreen="True" />
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.175"
                               To="-32"
                               Storyboard.TargetName="Toolbar_Desktop"
                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                               />
              <DoubleAnimation Duration="0:0:0.175"
                               To="-1"
                               Storyboard.TargetName="ContentContainer"
                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                               />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <wst:CompositeStateTrigger Operator="And">
              <wst:UserInteractionModeTrigger InteractionMode="Mouse" />
              <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
            </wst:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentContainer.Margin" Value="0 32 0 0" />
            <Setter Target="Toolbar_Desktop.(UIElement.RenderTransform).(TranslateTransform.Y)" Value="-1" />
            <Setter Target="ContentContainer.(UIElement.RenderTransform).(TranslateTransform.Y)" Value="0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
            
      <!-- 拡大縮小 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsZoomingEnabled, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ZoomingControlUI.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      
      <!-- アルバムかそれ以外かで画像のアクションを表示切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding ItemType}" EqualTo="{x:Bind domainModels:StorageItemTypes.Albam}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Page1SetThubmailImageButton.Visibility" Value="Collapsed" />
            <Setter Target="Page1ThumbnailImageSeparator.Visibility" Value="Collapsed" />
            <Setter Target="Page2SetThubmailImageButton.Visibility" Value="Collapsed" />
            <Setter Target="Page2ThumbnailImageSeparator.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding ItemType}" EqualTo="{x:Bind domainModels:StorageItemTypes.Archive}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Page1OpenWithExplorerButton.Visibility" Value="Collapsed" />
            <Setter Target="Page1OpenWithExternalAppButton.Visibility" Value="Collapsed" />
            <Setter Target="Page2OpenWithExplorerButton.Visibility" Value="Collapsed" />
            <Setter Target="Page2OpenWithExternalAppButton.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!-- 表示アイテムのストレージアイテムが見つからない場合 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding CurrentDisplayImageSources[0].StorageItem}" EqualTo="{x:Null}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Page1NameTextBlock.TextDecorations" Value="Strikethrough" />
            <Setter Target="Page1ActionButton.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding CurrentDisplayImageSources[1].StorageItem}" EqualTo="{x:Null}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Page2NameTextBlock.TextDecorations" Value="Strikethrough" />
            <Setter Target="Page2ActionButton.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!--見開き補正 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.NowDoubleImageView, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DoubleViewCorrectButton.Foreground" Value="{ThemeResource ApplicationForegroundThemeBrush}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="True" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Page2ActionButton.Visibility" Value="Collapsed" />
            <Setter Target="Page1ActionButton.(Grid.ColumnSpan)" Value="3" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>


      <!--見開き表示時の各ページ用アクションボタンの表示 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{x:Bind _vm.NowDoubleImageView, Mode=OneWay}" EqualTo="False" />
          </VisualState.StateTriggers>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.IsLeftBindingEnabled.Value, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Page1ActionButton.(Grid.Column)" Value="2" />
            <Setter Target="Page2ActionButton.(Grid.Column)" Value="0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!-- マウススクロールのページ送り -->
      <VisualStateGroup x:Name="VSG_MouseScrool">
        <VisualState>
          <VisualState.StateTriggers>
            <myStateTriggers:VirualKeyPressingTrigger Key="Control" myBehaviour:DependencyObjectExtensions.DisposeOnUnloadedTarget="{x:Bind}" />
            <StateTrigger IsActive="{x:Bind IsZoomingEnabled, Mode=OneWay}"  />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DefaultMouseWheelTrigger.IsEnabled" Value="False" />
            <Setter Target="ReverseMouseWheelTrigger.IsEnabled" Value="False" />

            <Setter Target="ZommingMouseWheelTrigger.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="VS_MouseScroolNotReadyToDisplay">
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsReadyToImageDisplay, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DefaultMouseWheelTrigger.IsEnabled" Value="False" />
            <Setter Target="ReverseMouseWheelTrigger.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.ImageViewerSettings.IsReverseImageFliping_MouseWheel, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DefaultMouseWheelTrigger.IsEnabled" Value="False" />
            <Setter Target="ReverseMouseWheelTrigger.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!-- 画面上のページ送り -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsReadyToImageDisplay, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
            <myStateTriggers:VirualKeyPressingTrigger Key="Control" myBehaviour:DependencyObjectExtensions.DisposeOnUnloadedTarget="{x:Bind}" />
            <StateTrigger IsActive="{x:Bind IsZoomingEnabled, Mode=OneWay}" />
            <StateTrigger IsActive="{x:Bind IsOpenBottomMenu, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="GamePadLeftTriggerBehavior.IsEnabled" Value="False" />
            <Setter Target="GamePadRightTriggerBehavior.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!-- 左右開きによる表示の切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.IsLeftBindingEnabled.Value, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PageSelector.FlowDirection" Value="LeftToRight" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>


      <!-- アーカイブファイル内のフォルダ名表示の切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <!-- x:BindでバインディングしようとするとXaml internal Compile error: C9999 -->
            <wst:CompareStateTrigger Value="{Binding PageFolderNames.Length}" CompareTo="0" Comparison="Equal" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PageFolderNamesSelector.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- デスクトップ、タッチ、コントローラーそれぞれの表示切替 -->
      <VisualStateGroup>

        <VisualState>
          <VisualState.StateTriggers>
            <wst:DeviceFamilyStateTrigger DeviceFamily="Xbox" />
            <StateTrigger IsActive="{StaticResource DebugTVMode}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ButtonsContainer.Margin" Value="0 48 0 64" />
            <Setter Target="ImageSelectorContainer.Margin" Value="0 32" />
          </VisualState.Setters>
        </VisualState>
        
        <VisualState>
          <VisualState.StateTriggers>
            <wst:UserInteractionModeTrigger InteractionMode="Touch" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SwitchFullScreeMenuItem.Visibility" Value="Visible" />
            <Setter Target="Toolbar_Desktop.Background" Value="Transparent" />
          </VisualState.Setters>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="TopBarContainer.Visibility" Value="Visible" />
            <Setter Target="SwitchFullScreeMenuItem.Visibility" Value="Visible" />
            
          </VisualState.Setters>
        </VisualState>

        

      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>

  </Grid>
</Page>
